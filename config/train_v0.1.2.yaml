---
weight_dir: /home/tb5zhh/PhotorealismEnhancement/ckpt/v0.1.2 # path to folder where checkpoints should be stored
name_load: # name of the checkpoint to load

common:
  unpin: false # disable pinning for the loader
  batch_size: 1
  num_loaders: 10
  log_interval: 1 # print losses every X iterations
  seed: 1

train:
  max_epochs: -1
  max_iterations: 1000000
  save_epochs: -1 # save every X epochs
  save_iterations: 5000 # save every X iterations
  name_save: v0.1.2
  shuffle_train: true
  val_interval: 1000 # run inference on validation set every X iterations

test:
  shuffle_test: false

real_dataset:
  name: Cityscapes
  root: /home/tb5zhh/PhotorealismEnhancement/data/cityscapes
  filelist: /home/tb5zhh/PhotorealismEnhancement/data/cityscapes/train_images_labels.txt  # file with path to image in each line.

fake_dataset:
  name: Carla
  root: /home/tb5zhh/PhotorealismEnhancement/data/anomaly_dataset/v0.1.2
  train_filelist: /home/tb5zhh/PhotorealismEnhancement/data/anomaly_dataset/v0.1.2/paths.txt # file with paths to image, gbuffers, robust labels, and gt labels (for deriving material segmentation) in each line.
  val_filelist: /home/tb5zhh/PhotorealismEnhancement/data/anomaly_dataset/v0.1.2/paths_val.txt # see above
  test_filelist: /home/tb5zhh/PhotorealismEnhancement/data/anomaly_dataset/v0.1.2/paths_val.txt # see above
  sampling:
    type: 'matching'
    matched_crop_path: /home/tb5zhh/PhotorealismEnhancement/data/match_v0.1.2/filtered_matches.csv # generated by matching/filter.py
    crop_weight_path: /home/tb5zhh/PhotorealismEnhancement/data/match_v0.1.2/weight.npz # generated by matching/compute_weights.py

generator:
  type: hr
  config:
    encoder_type: ENCODER
    stem_norm: group
    num_stages: 4
    other_norm: group
    gbuffer_norm: RAD
    gbuffer_encoder_norm: residual
    num_gbuffer_layers: 3
  optimizer:
    type: adam
    learning_rate: 0.0001
    adam_beta: 0.9
    adam_beta2: 0.999
    clip_gradient_norm: 1000
  scheduler:
    type: 'step'
    step: 100000
    gamma: 0.5

discriminator:
  type: ppde
  run_always: false
  config:
    norm: group
    num_layers: 4
    max_dim: 256
  optimizer:
    type: adam
    learning_rate: 0.0001
    adam_beta: 0.9
    adam_beta2: 0.999
    clip_gradient_norm: 1000
  scheduler:
    type: 'step'
    step: 1000000
    gamma: 0.5

objectives:
  gan: ls
  perceptual:
    type: 'lpips_vgg'
    weight: 5
  reg:
    weight: 0.03
...
